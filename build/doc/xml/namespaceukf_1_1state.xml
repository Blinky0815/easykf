<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="namespaceukf_1_1state" kind="namespace">
    <compoundname>ukf::state</compoundname>
    <innerclass refid="structukf_1_1state_1_1ukf__param" prot="public">ukf::state::ukf_param</innerclass>
    <innerclass refid="structukf_1_1state_1_1ukf__state" prot="public">ukf::state::ukf_state</innerclass>
    <innerclass refid="classukf_1_1state_1_1EvolutionNoise" prot="public">ukf::state::EvolutionNoise</innerclass>
    <innerclass refid="classukf_1_1state_1_1EvolutionAnneal" prot="public">ukf::state::EvolutionAnneal</innerclass>
    <innerclass refid="classukf_1_1state_1_1EvolutionRLS" prot="public">ukf::state::EvolutionRLS</innerclass>
    <innerclass refid="classukf_1_1state_1_1EvolutionRobbinsMonro" prot="public">ukf::state::EvolutionRobbinsMonro</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceukf_1_1state_1ad6760ca25736be80b2b9e9f9cbe9f8e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ukf::state::ukf_init</definition>
        <argsstring>(ukf_param &amp;p, ukf_state &amp;s)</argsstring>
        <name>ukf_init</name>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__param" kindref="compound">ukf_param</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__state" kindref="compound">ukf_state</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Allocation of the vectors/matrices and initialization. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" line="42" column="1" bodyfile="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" bodystart="42" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespaceukf_1_1state_1a07694a4f76574d87caf4b1e756ccae00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ukf::state::ukf_free</definition>
        <argsstring>(ukf_param &amp;p, ukf_state &amp;s)</argsstring>
        <name>ukf_free</name>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__param" kindref="compound">ukf_param</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__state" kindref="compound">ukf_state</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Free of memory allocation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" line="149" column="1" bodyfile="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" bodystart="149" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceukf_1_1state_1a3a0665674b96f3e979ca39d9d4583f43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctProcess</type>
          </param>
          <param>
            <type>typename FunctObservation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ukf::state::ukf_iterate</definition>
        <argsstring>(ukf_param &amp;p, ukf_state &amp;s, FunctProcess f, FunctObservation h, gsl_vector *yi)</argsstring>
        <name>ukf_iterate</name>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__param" kindref="compound">ukf_param</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__state" kindref="compound">ukf_state</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>FunctProcess</type>
          <declname>f</declname>
        </param>
        <param>
          <type>FunctObservation</type>
          <declname>h</declname>
        </param>
        <param>
          <type>gsl_vector *</type>
          <declname>yi</declname>
        </param>
        <briefdescription>
<para>UKF-additive (zero-mean) noise case, &quot;Kalman Filtering and Neural Networks&quot;, p.233. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" line="198" column="1" bodyfile="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" bodystart="198" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="namespaceukf_1_1state_1a2b40e84fd304480317cc6f0736a058fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FunctProcess</type>
          </param>
          <param>
            <type>typename FunctObservation</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void ukf::state::ukf_evaluate</definition>
        <argsstring>(ukf_param &amp;p, ukf_state &amp;s, FunctProcess f, FunctObservation h, gsl_vector *yi)</argsstring>
        <name>ukf_evaluate</name>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__param" kindref="compound">ukf_param</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="structukf_1_1state_1_1ukf__state" kindref="compound">ukf_state</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>FunctProcess</type>
          <declname>f</declname>
        </param>
        <param>
          <type>FunctObservation</type>
          <declname>h</declname>
        </param>
        <param>
          <type>gsl_vector *</type>
          <declname>yi</declname>
        </param>
        <briefdescription>
<para>Evaluation of the output from the sigma points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" line="374" column="1" bodyfile="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" bodystart="374" bodyend="461"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>UKF for state estimation, additive noise case The notations follow &quot;Sigma-Point Kalman Filters for Probabilistic Inference in Dynamic State-Space Models&quot;,p108, PhD, van Der Merwe. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/fix_jer/GIT/easykf/src/ukf_state_ndim.h" line="37" column="1"/>
  </compounddef>
</doxygen>
